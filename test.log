---> pavelib.tests.test_system
---> pavelib.prereqs.install_prereqs
---> pavelib.prereqs.install_ruby_prereqs
Ruby prereqs unchanged, skipping...
---> pavelib.prereqs.install_node_prereqs
Node prereqs unchanged, skipping...
---> pavelib.prereqs.install_python_prereqs
Python prereqs unchanged, skipping...
---> pavelib.utils.test.utils.clean_reports_dir
find /edx/app/edxapp/edx-platform/reports -type f -delete

Setting up for python tests
---> pavelib.utils.test.utils.clean_test_files
git clean -fqdx test_root/logs test_root/data test_root/staticfiles test_root/uploads
find . -type f -name "*.pyc" -delete
rm -rf test_root/log/auto_screenshots/*
rm -rf /tmp/mako_[cl]ms

Setting up for lms
python -m coverage run  --rcfile=lms/.coveragerc ./manage.py lms test --verbosity=1 lms/djangoapps/* common/djangoapps/* openedx/core/djangoapps/* lms/lib/* lms/tests.py   --traceback --settings=test [32;01m
========================================
 Running tests for lms 
========================================
[39;49;00m.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.....................................................XX......................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
............................................................................F
FFF..........................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
....................XX.......................................................
....................................................................X.F......
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
.............................................................................
......FF.....................................................................
.............................................................................
...........................................................FFFFFFFF..F.FFFFFF
FFFFFFF..FFFFF.FFFFF.........................................................
.............................................................................
...........................-.................................................
.............................................................................
.............................................................................
.............................................................................
...........................................-....-....-.-.....................
.............................................................................
....................................................................FF.......
..............................................F..............................
.............................................................................
.............................................................................
.............................................................................
.................................................--..........................
.............................................................................
.............................................................................
.............................................................................
.......-.....................................................................
.............................................................................
........................................................................-....
..-......-.........-.....................................-...................
.........--..............--..................................................
....................-........................................................
.............................................................................
.............................................................................
................---............................................
-----------------------------------------------------------------------------
1) ERROR: test_module_not_populated_with_user_email (lms.djangoapps.courseware.tests.test_module_render.ModuleRenderTestCase)

   Traceback (most recent call last):
    lms/djangoapps/courseware/tests/test_module_render.py line 182 in test_module_not_populated_with_user_email
      self.location,
   AttributeError: 'ModuleRenderTestCase' object has no attribute 'location'
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:49:52.486406+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Incorrect padding
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:49:53.503269+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
2) ERROR: test_module_populated_with_user_email (lms.djangoapps.courseware.tests.test_module_render.ModuleRenderTestCase)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/utils.py line 215 in inner
      return test_func(*args, **kwargs)
    lms/djangoapps/courseware/tests/test_module_render.py line 160 in test_module_populated_with_user_email
      self.location,
   AttributeError: 'ModuleRenderTestCase' object has no attribute 'location'
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:49:53.608869+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Incorrect padding
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('edX', 'toy', '2012_Fall', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:49:54.607221+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
3) FAIL: test_number_of_mongo_queries_1___mongo___1__21__15__40__27_ (lms.djangoapps.django_comment_client.forum.tests.SingleThreadQueryCountTestCase)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/ddt.py line 114 in wrapper
      return func(self, *args, **kwargs)
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py line 1201 in patched
      return func(*args, **keywargs)
    lms/djangoapps/django_comment_client/forum/tests.py line 384 in test_number_of_mongo_queries
      call_single_thread()
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 277 in __exit__
      executed, self.num
   AssertionError: 41 queries executed, 40 expected
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:01.744459+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Incorrect padding
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('org.4509', 'course_4509', 'Run_4509', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:01.803335+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   django.db.backends: DEBUG: (0.000) SELECT "auth_userprofile"."id", "auth_userprofile"."user_id", "auth_userprofile"."name", "auth_userprofile"."meta", "auth_userprofile"."courseware", "auth_userprofile"."language", "auth_userprofile"."location", "auth_userprofile"."year_of_birth", "auth_userprofile"."gender", "auth_userprofile"."level_of_education", "auth_userprofile"."mailing_address", "auth_userprofile"."city", "auth_userprofile"."country", "auth_userprofile"."goals", "auth_userprofile"."allow_certificate", "auth_userprofile"."bio", "auth_userprofile"."profile_image_uploaded_at", "auth_userprofile"."nonregistered" FROM "auth_userprofile" WHERE "auth_userprofile"."user_id" = 2 ; args=(2,)
   django.db.backends: DEBUG: (0.000) SELECT "student_courseenrollment"."id", "student_courseenrollment"."user_id", "student_courseenrollment"."course_id", "student_courseenrollment"."created", "student_courseenrollment"."is_active", "student_courseenrollment"."mode" FROM "student_courseenrollment" WHERE ("student_courseenrollment"."course_id" = org.4509/course_4509/Run_4509  AND "student_courseenrollment"."user_id" = 2 ); args=(u'org.4509/course_4509/Run_4509', 2)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4509/course_4509/Run_4509 ; args=(u'org.4509/course_4509/Run_4509',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4509/course_4509/Run_4509 ; args=(u'org.4509/course_4509/Run_4509',)
   django.db.backends: DEBUG: (0.000) INSERT INTO "course_groups_coursecohortssettings" ("is_cohorted", "course_id", "cohorted_discussions", "always_cohort_inline_discussions") VALUES (False, org.4509/course_4509/Run_4509, [], True); args=[False, u'org.4509/course_4509/Run_4509', '[]', True]
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = org.4509/course_4509/Run_4509  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'org.4509/course_4509/Run_4509', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4509/course_4509/Run_4509 ; args=(u'org.4509/course_4509/Run_4509',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = org.4509/course_4509/Run_4509  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'org.4509/course_4509/Run_4509', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4509/course_4509/Run_4509 ; args=(u'org.4509/course_4509/Run_4509',)
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=f1449a95-b7e6-4f26-b409-026a46d39d5f, method=get, url=http://localhost:4567/api/v1/users/2, duration=0.000247001647949
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = see_all_cohorts ) LIMIT 1; args=(1, 'see_all_cohorts')
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=5e0b36c0-4d27-45de-8dc5-3ef980b33da2, method=get, url=http://localhost:4567/api/v1/threads/test_thread_id, duration=0.000367879867554
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4509/course_4509/Run_4509 ; args=(u'org.4509/course_4509/Run_4509',)
   openedx.core.djangoapps.course_groups.cohorts: DEBUG: is_commentable_cohorted(org.4509/course_4509/Run_4509, dummy_discussion_id) = False
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_comment ) LIMIT 1; args=(1, 'create_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_thread ) LIMIT 1; args=(1, 'delete_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4509/course_4509/Run_4509 ); args=(2, u'org.4509/course_4509/Run_4509')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4509/course_4509/Run_4509 ; args=(u'org.4509/course_4509/Run_4509',)
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
4) FAIL: test_number_of_mongo_queries_2___mongo___50__315__15__628__27_ (lms.djangoapps.django_comment_client.forum.tests.SingleThreadQueryCountTestCase)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/ddt.py line 114 in wrapper
      return func(self, *args, **kwargs)
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py line 1201 in patched
      return func(*args, **keywargs)
    lms/djangoapps/django_comment_client/forum/tests.py line 384 in test_number_of_mongo_queries
      call_single_thread()
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 277 in __exit__
      executed, self.num
   AssertionError: 629 queries executed, 628 expected
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:01.972777+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Incorrect padding
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('org.4510', 'course_4510', 'Run_4510', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:02.030227+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   django.db.backends: DEBUG: (0.000) SELECT "auth_userprofile"."id", "auth_userprofile"."user_id", "auth_userprofile"."name", "auth_userprofile"."meta", "auth_userprofile"."courseware", "auth_userprofile"."language", "auth_userprofile"."location", "auth_userprofile"."year_of_birth", "auth_userprofile"."gender", "auth_userprofile"."level_of_education", "auth_userprofile"."mailing_address", "auth_userprofile"."city", "auth_userprofile"."country", "auth_userprofile"."goals", "auth_userprofile"."allow_certificate", "auth_userprofile"."bio", "auth_userprofile"."profile_image_uploaded_at", "auth_userprofile"."nonregistered" FROM "auth_userprofile" WHERE "auth_userprofile"."user_id" = 2 ; args=(2,)
   django.db.backends: DEBUG: (0.000) SELECT "student_courseenrollment"."id", "student_courseenrollment"."user_id", "student_courseenrollment"."course_id", "student_courseenrollment"."created", "student_courseenrollment"."is_active", "student_courseenrollment"."mode" FROM "student_courseenrollment" WHERE ("student_courseenrollment"."course_id" = org.4510/course_4510/Run_4510  AND "student_courseenrollment"."user_id" = 2 ); args=(u'org.4510/course_4510/Run_4510', 2)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4510/course_4510/Run_4510 ; args=(u'org.4510/course_4510/Run_4510',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4510/course_4510/Run_4510 ; args=(u'org.4510/course_4510/Run_4510',)
   django.db.backends: DEBUG: (0.000) INSERT INTO "course_groups_coursecohortssettings" ("is_cohorted", "course_id", "cohorted_discussions", "always_cohort_inline_discussions") VALUES (False, org.4510/course_4510/Run_4510, [], True); args=[False, u'org.4510/course_4510/Run_4510', '[]', True]
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = org.4510/course_4510/Run_4510  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'org.4510/course_4510/Run_4510', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4510/course_4510/Run_4510 ; args=(u'org.4510/course_4510/Run_4510',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = org.4510/course_4510/Run_4510  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'org.4510/course_4510/Run_4510', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4510/course_4510/Run_4510 ; args=(u'org.4510/course_4510/Run_4510',)
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=7acbe1a2-e550-46b0-b8e0-d41ff7437a41, method=get, url=http://localhost:4567/api/v1/users/2, duration=0.000317096710205
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = see_all_cohorts ) LIMIT 1; args=(1, 'see_all_cohorts')
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=95e2154c-491e-47ea-ae4e-df03a9e2530e, method=get, url=http://localhost:4567/api/v1/threads/test_thread_id, duration=0.000213861465454
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4510/course_4510/Run_4510 ; args=(u'org.4510/course_4510/Run_4510',)
   openedx.core.djangoapps.course_groups.cohorts: DEBUG: is_commentable_cohorted(org.4510/course_4510/Run_4510, dummy_discussion_id) = False
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_comment ) LIMIT 1; args=(1, 'create_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_thread ) LIMIT 1; args=(1, 'delete_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.001) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.001) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.001) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = org.4510/course_4510/Run_4510 ); args=(2, u'org.4510/course_4510/Run_4510')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = org.4510/course_4510/Run_4510 ; args=(u'org.4510/course_4510/Run_4510',)
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
5) FAIL: test_number_of_mongo_queries_3___split___1__3__3__40__27_ (lms.djangoapps.django_comment_client.forum.tests.SingleThreadQueryCountTestCase)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/ddt.py line 114 in wrapper
      return func(self, *args, **kwargs)
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py line 1201 in patched
      return func(*args, **keywargs)
    lms/djangoapps/django_comment_client/forum/tests.py line 384 in test_number_of_mongo_queries
      call_single_thread()
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 277 in __exit__
      executed, self.num
   AssertionError: 41 queries executed, 40 expected
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:03.582908+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate structure 55493c7356c02c7dce788667
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate structure 55493c7356c02c7dce788664
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate definition 55493c7356c02c7dce788663
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate definition 55493c7356c02c7dce788668
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate definition 55493c7356c02c7dce788666
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Not a gzipped file
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': CourseLocator('org.4511', 'course_4511', 'Run_4511', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:03.683965+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   django.db.backends: DEBUG: (0.000) SELECT "auth_userprofile"."id", "auth_userprofile"."user_id", "auth_userprofile"."name", "auth_userprofile"."meta", "auth_userprofile"."courseware", "auth_userprofile"."language", "auth_userprofile"."location", "auth_userprofile"."year_of_birth", "auth_userprofile"."gender", "auth_userprofile"."level_of_education", "auth_userprofile"."mailing_address", "auth_userprofile"."city", "auth_userprofile"."country", "auth_userprofile"."goals", "auth_userprofile"."allow_certificate", "auth_userprofile"."bio", "auth_userprofile"."profile_image_uploaded_at", "auth_userprofile"."nonregistered" FROM "auth_userprofile" WHERE "auth_userprofile"."user_id" = 2 ; args=(2,)
   django.db.backends: DEBUG: (0.000) SELECT "student_courseenrollment"."id", "student_courseenrollment"."user_id", "student_courseenrollment"."course_id", "student_courseenrollment"."created", "student_courseenrollment"."is_active", "student_courseenrollment"."mode" FROM "student_courseenrollment" WHERE ("student_courseenrollment"."course_id" = course-v1:org.4511+course_4511+Run_4511  AND "student_courseenrollment"."user_id" = 2 ); args=(u'course-v1:org.4511+course_4511+Run_4511', 2)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4511+course_4511+Run_4511 ; args=(u'course-v1:org.4511+course_4511+Run_4511',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4511+course_4511+Run_4511 ; args=(u'course-v1:org.4511+course_4511+Run_4511',)
   django.db.backends: DEBUG: (0.000) INSERT INTO "course_groups_coursecohortssettings" ("is_cohorted", "course_id", "cohorted_discussions", "always_cohort_inline_discussions") VALUES (False, course-v1:org.4511+course_4511+Run_4511, [], True); args=[False, u'course-v1:org.4511+course_4511+Run_4511', '[]', True]
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = course-v1:org.4511+course_4511+Run_4511  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'course-v1:org.4511+course_4511+Run_4511', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4511+course_4511+Run_4511 ; args=(u'course-v1:org.4511+course_4511+Run_4511',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = course-v1:org.4511+course_4511+Run_4511  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'course-v1:org.4511+course_4511+Run_4511', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4511+course_4511+Run_4511 ; args=(u'course-v1:org.4511+course_4511+Run_4511',)
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=305f3149-f8f5-40a1-9501-6d8497b5683e, method=get, url=http://localhost:4567/api/v1/users/2, duration=0.000493049621582
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = see_all_cohorts ) LIMIT 1; args=(1, 'see_all_cohorts')
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=4b7e095a-3b81-4866-8e5f-d5cf06d39dbc, method=get, url=http://localhost:4567/api/v1/threads/test_thread_id, duration=0.000510931015015
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4511+course_4511+Run_4511 ; args=(u'course-v1:org.4511+course_4511+Run_4511',)
   openedx.core.djangoapps.course_groups.cohorts: DEBUG: is_commentable_cohorted(course-v1:org.4511+course_4511+Run_4511, dummy_discussion_id) = False
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_comment ) LIMIT 1; args=(1, 'create_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_thread ) LIMIT 1; args=(1, 'delete_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4511+course_4511+Run_4511 ); args=(2, u'course-v1:org.4511+course_4511+Run_4511')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4511+course_4511+Run_4511 ; args=(u'course-v1:org.4511+course_4511+Run_4511',)
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
6) FAIL: test_number_of_mongo_queries_4___split___50__3__3__628__27_ (lms.djangoapps.django_comment_client.forum.tests.SingleThreadQueryCountTestCase)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/ddt.py line 114 in wrapper
      return func(self, *args, **kwargs)
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py line 1201 in patched
      return func(*args, **keywargs)
    lms/djangoapps/django_comment_client/forum/tests.py line 384 in test_number_of_mongo_queries
      call_single_thread()
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 277 in __exit__
      executed, self.num
   AssertionError: 629 queries executed, 628 expected
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:03.840871+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate structure 55493c7356c02c7dce78866a
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate structure 55493c7356c02c7dce78866d
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate definition 55493c7356c02c7dce788669
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate definition 55493c7356c02c7dce78866e
   xmodule.modulestore.split_mongo.split: DEBUG: Attempted to insert duplicate definition 55493c7356c02c7dce78866c
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Not a gzipped file
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': CourseLocator('org.4512', 'course_4512', 'Run_4512', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:56:03.907986+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   django.db.backends: DEBUG: (0.000) SELECT "auth_userprofile"."id", "auth_userprofile"."user_id", "auth_userprofile"."name", "auth_userprofile"."meta", "auth_userprofile"."courseware", "auth_userprofile"."language", "auth_userprofile"."location", "auth_userprofile"."year_of_birth", "auth_userprofile"."gender", "auth_userprofile"."level_of_education", "auth_userprofile"."mailing_address", "auth_userprofile"."city", "auth_userprofile"."country", "auth_userprofile"."goals", "auth_userprofile"."allow_certificate", "auth_userprofile"."bio", "auth_userprofile"."profile_image_uploaded_at", "auth_userprofile"."nonregistered" FROM "auth_userprofile" WHERE "auth_userprofile"."user_id" = 2 ; args=(2,)
   django.db.backends: DEBUG: (0.000) SELECT "student_courseenrollment"."id", "student_courseenrollment"."user_id", "student_courseenrollment"."course_id", "student_courseenrollment"."created", "student_courseenrollment"."is_active", "student_courseenrollment"."mode" FROM "student_courseenrollment" WHERE ("student_courseenrollment"."course_id" = course-v1:org.4512+course_4512+Run_4512  AND "student_courseenrollment"."user_id" = 2 ); args=(u'course-v1:org.4512+course_4512+Run_4512', 2)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4512+course_4512+Run_4512 ; args=(u'course-v1:org.4512+course_4512+Run_4512',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4512+course_4512+Run_4512 ; args=(u'course-v1:org.4512+course_4512+Run_4512',)
   django.db.backends: DEBUG: (0.000) INSERT INTO "course_groups_coursecohortssettings" ("is_cohorted", "course_id", "cohorted_discussions", "always_cohort_inline_discussions") VALUES (False, course-v1:org.4512+course_4512+Run_4512, [], True); args=[False, u'course-v1:org.4512+course_4512+Run_4512', '[]', True]
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = course-v1:org.4512+course_4512+Run_4512  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'course-v1:org.4512+course_4512+Run_4512', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4512+course_4512+Run_4512 ; args=(u'course-v1:org.4512+course_4512+Run_4512',)
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_courseusergroup"."id", "course_groups_courseusergroup"."name", "course_groups_courseusergroup"."course_id", "course_groups_courseusergroup"."group_type" FROM "course_groups_courseusergroup" WHERE ("course_groups_courseusergroup"."course_id" = course-v1:org.4512+course_4512+Run_4512  AND "course_groups_courseusergroup"."group_type" = cohort ); args=(u'course-v1:org.4512+course_4512+Run_4512', 'cohort')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4512+course_4512+Run_4512 ; args=(u'course-v1:org.4512+course_4512+Run_4512',)
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=f9d117ab-1c24-4d9f-b3a0-8e89df6449a5, method=get, url=http://localhost:4567/api/v1/users/2, duration=0.000277996063232
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = see_all_cohorts ) LIMIT 1; args=(1, 'see_all_cohorts')
   lms.lib.comment_client.utils: INFO: comment_client_request_log: request_id=8442190d-1145-489d-b453-75e756dcb625, method=get, url=http://localhost:4567/api/v1/threads/test_thread_id, duration=0.000364065170288
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4512+course_4512+Run_4512 ; args=(u'course-v1:org.4512+course_4512+Run_4512',)
   openedx.core.djangoapps.course_groups.cohorts: DEBUG: is_commentable_cohorted(course-v1:org.4512+course_4512+Run_4512, dummy_discussion_id) = False
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_comment ) LIMIT 1; args=(1, 'create_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_thread ) LIMIT 1; args=(1, 'delete_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_thread ) LIMIT 1; args=(1, 'update_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = openclose_thread ) LIMIT 1; args=(1, 'openclose_thread')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.001) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.001) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.001) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = edit_content ) LIMIT 1; args=(1, 'edit_content')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.001) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = create_sub_comment ) LIMIT 1; args=(1, 'create_sub_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = delete_comment ) LIMIT 1; args=(1, 'delete_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = update_comment ) LIMIT 1; args=(1, 'update_comment')
   django.db.backends: DEBUG: (0.000) SELECT "django_comment_client_role"."id", "django_comment_client_role"."name", "django_comment_client_role"."course_id" FROM "django_comment_client_role" INNER JOIN "django_comment_client_role_users" ON ("django_comment_client_role"."id" = "django_comment_client_role_users"."role_id") WHERE ("django_comment_client_role_users"."user_id" = 2  AND "django_comment_client_role"."course_id" = course-v1:org.4512+course_4512+Run_4512 ); args=(2, u'course-v1:org.4512+course_4512+Run_4512')
   django.db.backends: DEBUG: (0.000) SELECT (1) AS "a" FROM "django_comment_client_permission" INNER JOIN "django_comment_client_permission_roles" ON ("django_comment_client_permission"."name" = "django_comment_client_permission_roles"."permission_id") WHERE ("django_comment_client_permission_roles"."role_id" = 1  AND "django_comment_client_permission"."name" = vote ) LIMIT 1; args=(1, 'vote')
   django.db.backends: DEBUG: (0.000) SELECT "course_groups_coursecohortssettings"."id", "course_groups_coursecohortssettings"."is_cohorted", "course_groups_coursecohortssettings"."course_id", "course_groups_coursecohortssettings"."cohorted_discussions", "course_groups_coursecohortssettings"."always_cohort_inline_discussions" FROM "course_groups_coursecohortssettings" WHERE "course_groups_coursecohortssettings"."course_id" = course-v1:org.4512+course_4512+Run_4512 ; args=(u'course-v1:org.4512+course_4512+Run_4512',)
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
7) ERROR: test_full_course_no_students (lms.djangoapps.instructor_analytics.tests.test_basic.TestStudentSubmissionsAnalyticsBasic)

   Traceback (most recent call last):
    lms/djangoapps/instructor_analytics/tests/test_basic.py line 409 in test_full_course_no_students
      self.load_course('edX/simple/2012_Fall')
    lms/djangoapps/instructor_analytics/tests/test_basic.py line 395 in load_course
      self.course = get_course(course_key)
    lms/djangoapps/courseware/courses.py line 61 in get_course
      raise ValueError(u"Course not found: {0}".format(course_id))
   ValueError: Course not found: edX/simple/2012_Fall
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   xmodule.modulestore.xml: DEBUG: ========> Starting courselike import from toy
   xmodule.modulestore.xml: DEBUG: ========> Done with courselike import from toy
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:58:21.160354+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
8) ERROR: test_invalid_module_state (lms.djangoapps.instructor_analytics.tests.test_basic.TestStudentSubmissionsAnalyticsBasic)

   Traceback (most recent call last):
    lms/djangoapps/instructor_analytics/tests/test_basic.py line 415 in test_invalid_module_state
      self.load_course('edX/graded/2012_Fall')
    lms/djangoapps/instructor_analytics/tests/test_basic.py line 395 in load_course
      self.course = get_course(course_key)
    lms/djangoapps/courseware/courses.py line 61 in get_course
      raise ValueError(u"Course not found: {0}".format(course_id))
   ValueError: Course not found: edX/graded/2012_Fall
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   xmodule.modulestore.xml: DEBUG: ========> Starting courselike import from toy
   xmodule.modulestore.xml: DEBUG: ========> Done with courselike import from toy
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:58:21.266987+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
9) ERROR: test_unicode (lms.djangoapps.instructor_task.tests.test_tasks_helper.TestReponsesReport)

   Traceback (most recent call last):
    lms/djangoapps/instructor_task/tests/test_tasks_helper.py line 403 in test_unicode
      self.course = get_course_by_id(course_key)
    lms/djangoapps/courseware/courses.py line 79 in get_course_by_id
      raise Http404("Course not found.")
   Http404: Course not found.
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   xmodule.modulestore.xml: DEBUG: ========> Starting courselike import from toy
   xmodule.modulestore.xml: DEBUG: ========> Done with courselike import from toy
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:59:00.802589+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
10) FAIL: test_reports_rev_chronologically_sorted (lms.djangoapps.instructor_task.tests.test_tasks_helper.TestReportStore)

   Traceback (most recent call last):
    lms/djangoapps/instructor_task/tests/test_tasks_helper.py line 344 in test_reports_rev_chronologically_sorted
      self.assertEquals(filenames, rev_chronological_filenames)
   AssertionError: Lists differ: ['filename4_2015-03-10-0024.cs... != ['filename4_2015-03-10-0024.cs...
   
   First differing element 1:
   filename2_2015-03-10-0022.csv
   filename3_2015-03-10-0023.csv
   
     ['filename4_2015-03-10-0024.csv',
   +  'filename3_2015-03-10-0023.csv',
      'filename2_2015-03-10-0022.csv',
   -  'filename3_2015-03-10-0023.csv',
      'filename1_2015-03-10-0021.csv']
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T21:59:00.928812+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Incorrect padding
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('org.5849', 'course_5849', 'Run_5849', None, None)}. Response was: None
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
11) FAIL: test_microsite_uses_old_login_page (lms.djangoapps.student_account.test.test_views.StudentAccountLoginAndRegistrationTest)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/utils.py line 215 in inner
      return test_func(*args, **kwargs)
    lms/djangoapps/student_account/test/test_views.py line 467 in test_microsite_uses_old_login_page
      self.assertContains(resp, "Log into your Test Microsite Account")
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find 'Log into your Test Microsite Account' in response
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:01:01.793180+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   tracking: INFO: {"username": "", "event_type": "/account/login/", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/account/login/"}, "time": "2015-05-05T22:01:01.889218+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
12) FAIL: test_microsite_uses_old_register_page (lms.djangoapps.student_account.test.test_views.StudentAccountLoginAndRegistrationTest)

   Traceback (most recent call last):
    lms/djangoapps/student_account/test/test_views.py line 477 in test_microsite_uses_old_register_page
      self.assertContains(resp, "Register for Test Microsite")
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find 'Register for Test Microsite' in response
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:01:02.803949+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   tracking: INFO: {"username": "", "event_type": "/account/register/", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/account/register/"}, "time": "2015-05-05T22:01:02.900505+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
13) FAIL: test_activation_email_exception (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py line 1201 in patched
      return func(*args, **keywargs)
    common/djangoapps/cme_registration/tests/registration_tests.py line 560 in test_activation_email_exception
      self.assertContains(response, 'Could not send activation e-mail.')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find 'Could not send activation e-mail.' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.113005+00:00", "page": null}
   mitx.student: WARNING: Unable to send activation email to user
   Traceback (most recent call last):
     File "/edx/app/edxapp/edx-platform/common/djangoapps/cme_registration/views.py", line 161, in cme_create_account
       user.email_user(subject, message, settings.DEFAULT_FROM_EMAIL)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py", line 955, in __call__
       return _mock_self._mock_call(*args, **kwargs)
     File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py", line 1010, in _mock_call
       raise effect
   Exception
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
14) FAIL: test_address_1_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 280 in test_address_1_required
      self.assertContains(response, '{"field": "address_1", "value": "Enter your Address 1", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "address_1", "value": "Enter your Address 1", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.149579+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
15) FAIL: test_badly_formed_message (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 72 in test_badly_formed_message
      self.assertContains(response, '{"field": "username", "value": "Error (401 username). E-mail us.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "username", "value": "Error (401 username). E-mail us.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.157675+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
16) FAIL: test_birth_date_format1 (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 122 in test_birth_date_format1
      self.assertContains(response, '{"field": "birth_date", "value": "Enter your birth date as MM/DD", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "birth_date", "value": "Enter your birth date as MM/DD", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.182344+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
17) FAIL: test_birth_date_format2 (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 132 in test_birth_date_format2
      self.assertContains(response, '{"field": "birth_date", "value": "month must be in 1..12", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "birth_date", "value": "month must be in 1..12", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.210380+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
18) FAIL: test_birth_date_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 112 in test_birth_date_required
      self.assertContains(response, '{"field": "birth_date", "value": "Enter your birth date", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "birth_date", "value": "Enter your birth date", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.235297+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
19) FAIL: test_city_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 290 in test_city_required
      self.assertContains(response, '{"field": "city", "value": "Enter your city", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "city", "value": "Enter your city", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"\"], \"first", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.260118+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
20) FAIL: test_country_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 300 in test_country_required
      self.assertContains(response, '{"field": "country", "value": "Choose your country", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "country", "value": "Choose your country", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.281863+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
21) FAIL: test_dupe_username (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 507 in test_dupe_username
      self.assertContains(response, '{"field": "username", "value": "An account with the Public Username  \'student001\' already exists.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "username", "value": "An account with the Public Username  'student001' already exists.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:01:49.377599+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"student001\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], ", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.405432+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
22) FAIL: test_first_name_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 92 in test_first_name_required
      self.assertContains(response, '{"field": "first_name", "value": "Enter your first name", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "first_name", "value": "Enter your first name", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.433026+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
23) FAIL: test_honor_code_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 353 in test_honor_code_required
      self.assertContains(response, '{"field": "honor_code", "value": "To enroll, you must follow the honor code.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "honor_code", "value": "To enroll, you must follow the honor code.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\": [\"Chester\"],", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.458875+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
24) FAIL: test_last_name_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 82 in test_last_name_required
      self.assertContains(response, '{"field": "last_name", "value": "Enter your last name", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "last_name", "value": "Enter your last name", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_n", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.484384+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
25) FAIL: test_license_country_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 164 in test_license_country_required
      self.assertContains(response, '{"field": "license_country", "value": "Choose your license country", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "license_country", "value": "Choose your license country", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\": [\"C", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.513491+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
26) FAIL: test_license_number_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 153 in test_license_number_required
      self.assertContains(response, '{"field": "license_number", "value": "Enter your license number", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "license_number", "value": "Enter your license number", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.537398+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
27) FAIL: test_license_state_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 175 in test_license_state_required
      self.assertContains(response, '{"field": "license_state", "value": "Choose your license state", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "license_state", "value": "Choose your license state", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"United States\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"fir", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.566607+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
28) FAIL: test_middle_initial_length (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 102 in test_middle_initial_length
      self.assertContains(response, '{"field": "middle_initial", "value": "Enter your middle initial as a single character", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "middle_initial", "value": "Enter your middle initial as a single character", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"ABC\"], \"city\": [\"city\"], ", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.592652+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
29) FAIL: test_patient_population_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 197 in test_patient_population_required
      self.assertContains(response, '{"field": "patient_population", "value": "Choose your patient population", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "patient_population", "value": "Choose your patient population", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.618348+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
30) FAIL: test_physician_status_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 186 in test_physician_status_required
      self.assertContains(response, '{"field": "physician_status", "value": "Enter your physician status", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "physician_status", "value": "Enter your physician status", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\": [\"Ch", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.643954+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
31) FAIL: test_postal_code_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 321 in test_postal_code_required
      self.assertContains(response, '{"field": "postal_code", "value": "Enter your postal code", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "postal_code", "value": "Enter your postal code", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\":", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.668543+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
32) FAIL: test_professional_designation_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 142 in test_professional_designation_required
      self.assertContains(response, '{"field": "professional_designation", "value": "Choose your professional designation", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "professional_designation", "value": "Choose your professional designation", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.694370+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
33) FAIL: test_register_page_loads (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 526 in test_register_page_loads
      self.assertEqual(response.status_code, 200)
   AssertionError: 405 != 200
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/register", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/register"}, "time": "2015-05-05T22:01:49.704182+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
34) FAIL: test_register_when_logged_in (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 518 in test_register_when_logged_in
      self.assertRedirects(response, reverse('dashboard'), status_code=302)
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 580 in assertRedirects
      (response.status_code, status_code))
   AssertionError: Response didn't redirect as expected: Response code was 405 (expected 302)
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:01:49.712298+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   audit: INFO: Login success - student002 (student002@test.com)
   tracking: INFO: {"username": "student002", "event_type": "/register", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {}}", "event_source": "server", "context": {"user_id": 1, "org_id": "", "course_id": "", "path": "/register"}, "time": "2015-05-05T22:01:49.732510+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
35) FAIL: test_specialty_other (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 332 in test_specialty_other
      self.assertContains(response, '{"field": "specialty", "value": "Enter your specialty.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "specialty", "value": "Enter your specialty.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"Other\"], \"affiliation\": [\"affiliation\"], \"specialty_free\": [\"\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], ", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.839442+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
36) FAIL: test_specialty_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 208 in test_specialty_required
      self.assertContains(response, '{"field": "specialty", "value": "Choose your specialty", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "specialty", "value": "Choose your specialty", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.865873+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
37) FAIL: test_stanford_department_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 270 in test_stanford_department_required
      self.assertContains(response, '{"field": "stanford_department", "value": "Choose your Stanford department", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "stanford_department", "value": "Choose your Stanford department", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"Stanford University\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\":", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.892055+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
38) FAIL: test_state_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 311 in test_state_required
      self.assertContains(response, '{"field": "state", "value": "Choose your state", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "state", "value": "Choose your state", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.917401+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
39) FAIL: test_sub_affiliation_field (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 248 in test_sub_affiliation_field
      self.assertContains(response, '{"field": "sub_affiliation", "value": "Enter your Packard Children\'s Health Alliance affiliation", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "sub_affiliation", "value": "Enter your Packard Children's Health Alliance affiliation", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"affiliation\": [\"Packard Children's Health Alliance\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"terms_of_service\": [\"true\"], \"other_affiliation\": [\"other_affiliation\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\": [\"Chester\"], \"license_number\": [\"license_number\"], \"state\": [\"state\"], \"professional_designation\": [\"professional_designation\"], \"email\": [\"test@email.com\"], \"license_state\": [\"lice", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:49.943188+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
40) FAIL: test_sub_specialty_other (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 343 in test_sub_specialty_other
      self.assertContains(response, '{"field": "sub_specialty", "value": "Enter your sub-specialty.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "sub_specialty", "value": "Enter your sub-specialty.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"Other\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"license_state\": [\"license_state\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\":", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:50.013836+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
41) FAIL: test_sunet_id_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 259 in test_sunet_id_required
      self.assertContains(response, '{"field": "sunet_id", "value": "Enter your SUNet ID", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "sunet_id", "value": "Enter your SUNet ID", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"Stanford University\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:50.040517+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
42) FAIL: test_tos_required (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 363 in test_tos_required
      self.assertContains(response, '{"field": "terms_of_service", "value": "You must accept the terms of service.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "terms_of_service", "value": "You must accept the terms of service.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"first_name\": [\"Chester\"], \"name", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:50.065014+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
43) FAIL: test_valid_email (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 485 in test_valid_email
      self.assertContains(response, '{"field": "email", "value": "Valid e-mail is required.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "email", "value": "Valid e-mail is required.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"testuser\"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:50.090908+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
44) FAIL: test_valid_username (cme_registration.tests.registration_tests.TestCmeRegistration)

   Traceback (most recent call last):
    common/djangoapps/cme_registration/tests/registration_tests.py line 495 in test_valid_username
      self.assertContains(response, '{"field": "username", "value": "Username should only consist of A-Z and 0-9, with no spaces.", "success": false}')
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find '{"field": "username", "value": "Username should only consist of A-Z and 0-9, with no spaces.", "success": false}' in response
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\" $%$%$# \"], \"sub_specialty\": [\"sub_specialty\"], \"last_name\": [\"Tester\"], \"sunet_id\": [\"sunet_id\"], \"specialty\": [\"specialty\"], \"affiliation\": [\"affiliation\"], \"postal_code\": [\"postal_code\"], \"physician_status\": [\"physician_status\"], \"honor_code\": [\"true\"], \"terms_of_service\": [\"true\"], \"password\": \"********\", \"other_affiliation\": [\"other_affiliation\"], \"license_country\": [\"license_country\"], \"stanford_department\": [\"stanford_department\"], \"middle_initial\": [\"A\"], \"city\": [\"city\"], \"f", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:01:50.115474+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
45) FAIL: test_activation_email (student.tests.test_email.ActivationEmailTests)

   Traceback (most recent call last):
    common/djangoapps/student/tests/test_email.py line 146 in test_activation_email
      self._assert_activation_email(self.ACTIVATION_SUBJECT, self.OPENEDX_FRAGMENTS)
    common/djangoapps/student/tests/test_email.py line 177 in _assert_activation_email
      self.assertEqual(msg.subject, subject)
   AssertionError: u'Activate Your Your Account Name Here Account' != 'Activate Your edX Account'
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"test_user\"], \"name\": [\"Test User\"], \"honor_code\": [\"True\"], \"terms_of_service\": [\"True\"], \"password\": \"********\", \"email\": [\"test_user@example.com\"]}, \"GET\": {}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:03:00.560765+00:00", "page": null}
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:03:00.573013+00:00", "agent": "", "page": null, "host": "testserver", "session": "", "referer": "", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "ip": "127.0.0.1", "event": {"user_id": 1, "truncated": [], "old": null, "setting": "pref-lang", "table": "user_api_userpreference", "new": "en"}, "event_type": "edx.user.settings.changed"}
   audit: INFO: Login success - test_user (test_user@example.com)
   audit: INFO: Login success on new account creation - test_user
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
46) FAIL: test_activation_email_edx_domain (student.tests.test_email.ActivationEmailTests)

   Traceback (most recent call last):
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/mock.py line 1618 in _inner
      return f(*args, **kw)
    common/djangoapps/student/tests/test_email.py line 151 in test_activation_email_edx_domain
      self._assert_activation_email(self.ACTIVATION_SUBJECT, self.EDX_DOMAIN_FRAGMENTS)
    common/djangoapps/student/tests/test_email.py line 177 in _assert_activation_email
      self.assertEqual(msg.subject, subject)
   AssertionError: u'Activate Your Your Account Name Here Account' != 'Activate Your edX Account'
   -------------------- >> begin captured logging << --------------------
   tracking: INFO: {"username": "", "event_type": "/create_account", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {\"username\": [\"test_user\"], \"name\": [\"Test User\"], \"honor_code\": [\"True\"], \"terms_of_service\": [\"True\"], \"password\": \"********\", \"email\": [\"test_user@example.com\"]}, \"GET\": {}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "time": "2015-05-05T22:03:00.597941+00:00", "page": null}
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:03:00.612362+00:00", "agent": "", "page": null, "host": "testserver", "session": "", "referer": "", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/create_account"}, "ip": "127.0.0.1", "event": {"user_id": 1, "truncated": [], "old": null, "setting": "pref-lang", "table": "user_api_userpreference", "new": "en"}, "event_type": "edx.user.settings.changed"}
   audit: INFO: Login success - test_user (test_user@example.com)
   audit: INFO: Login success on new account creation - test_user
   --------------------- >> end captured logging << ---------------------

-----------------------------------------------------------------------------
47) FAIL: test_externalauth_login_required_course_context (student.tests.test_login.ExternalAuthShibTest)

   Traceback (most recent call last):
    common/djangoapps/student/tests/test_login.py line 429 in test_externalauth_login_required_course_context
      platform_name=settings.PLATFORM_NAME,
    /edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/django/test/testcases.py line 640 in assertContains
      msg_prefix + "Couldn't find '%s' in response" % text)
   AssertionError: Couldn't find 'Log into your Your Account Name Here Account | edX' in response
   -------------------- >> begin captured logging << --------------------
   root: DEBUG: Using MongoDB for static content serving at host=localhost port=27017 db=xcontent
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:03:07.701193+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 1, "truncated": [], "old": false, "setting": "is_staff", "table": "auth_user", "new": true}, "event_type": "edx.user.settings.changed"}
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Not a gzipped file
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('Stanford', '456', 'NO_SHIB', None, None)}. Response was: None
   util.models: ERROR: String decompression failed. There may be corrupted data in the database: Not a gzipped file
   xmodule.modulestore.django: INFO: Sent course_published signal to <function listen_for_course_publish at 0x6d18b90> with kwargs {'course_key': SlashSeparatedCourseKey('Stanford', '123', 'Shib_Only', None, None)}. Response was: None
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:03:07.775750+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 2, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   tracking: INFO: {"username": "", "event_source": "server", "name": "edx.user.settings.changed", "accept_language": "", "time": "2015-05-05T22:03:07.790456+00:00", "agent": "", "page": null, "host": "", "session": "", "referer": "", "context": {}, "ip": "", "event": {"user_id": 3, "truncated": [], "old": null, "setting": "password", "table": "auth_user", "new": null}, "event_type": "edx.user.settings.changed"}
   tracking: INFO: {"username": "", "event_type": "/courses/Stanford/456/NO_SHIB/courseware", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {}}", "event_source": "server", "context": {"course_user_tags": {}, "user_id": "", "org_id": "Stanford", "course_id": "Stanford/456/NO_SHIB", "path": "/courses/Stanford/456/NO_SHIB/courseware"}, "time": "2015-05-05T22:03:07.882327+00:00", "page": null}
   tracking: INFO: {"username": "", "event_type": "/accounts/login", "ip": "127.0.0.1", "agent": "", "host": "testserver", "referer": "", "accept_language": "", "event": "{\"POST\": {}, \"GET\": {\"next\": [\"/courses/Stanford/456/NO_SHIB/courseware\"]}}", "event_source": "server", "context": {"user_id": "", "org_id": "", "course_id": "", "path": "/accounts/login"}, "time": "2015-05-05T22:03:07.886854+00:00", "page": null}
   --------------------- >> end captured logging << ---------------------


-----------------------------------------------------------------------------
4683 tests run in 1295.0 seconds. 
42 FAILED, 5 errors, 21 skipped (4615 tests passed)
nosetests lms/djangoapps/__init__.py lms/djangoapps/branding lms/djangoapps/branding_stanford lms/djangoapps/bulk_email lms/djangoapps/ccx lms/djangoapps/certificates lms/djangoapps/circuit lms/djangoapps/class_dashboard lms/djangoapps/commerce lms/djangoapps/course_structure_api lms/djangoapps/course_wiki lms/djangoapps/courseware lms/djangoapps/dashboard lms/djangoapps/debug lms/djangoapps/django_comment_client lms/djangoapps/edxnotes lms/djangoapps/foldit lms/djangoapps/instructor lms/djangoapps/instructor_analytics lms/djangoapps/instructor_email_widget lms/djangoapps/instructor_task lms/djangoapps/jabber lms/djangoapps/licenses lms/djangoapps/lms_migration lms/djangoapps/lms_xblock lms/djangoapps/mobile_api lms/djangoapps/notes lms/djangoapps/notification_prefs lms/djangoapps/notifier_api lms/djangoapps/oauth2_handler lms/djangoapps/open_ended_grading lms/djangoapps/psychometrics lms/djangoapps/shoppingcart lms/djangoapps/sneakpeek_deeplink lms/djangoapps/static_template_view lms/djangoapps/staticbook lms/djangoapps/student_account lms/djangoapps/student_profile lms/djangoapps/survey lms/djangoapps/verify_student common/djangoapps/cache_toolbox common/djangoapps/cme_registration common/djangoapps/config_models common/djangoapps/contentserver common/djangoapps/cors_csrf common/djangoapps/course_about common/djangoapps/course_action_state common/djangoapps/course_modes common/djangoapps/dark_lang common/djangoapps/datadog common/djangoapps/django_comment_common common/djangoapps/django_future common/djangoapps/edxmako common/djangoapps/embargo common/djangoapps/enrollment common/djangoapps/external_auth common/djangoapps/fix_bad_data common/djangoapps/geoinfo common/djangoapps/heartbeat common/djangoapps/lang_pref common/djangoapps/microsite_configuration common/djangoapps/monitoring common/djangoapps/monkey_patch common/djangoapps/oauth_exchange common/djangoapps/performance common/djangoapps/pipeline_js common/djangoapps/pipeline_mako common/djangoapps/request_cache common/djangoapps/reverification common/djangoapps/service_status common/djangoapps/session_inactivity_timeout common/djangoapps/static_replace common/djangoapps/status common/djangoapps/student common/djangoapps/terrain common/djangoapps/third_party_auth common/djangoapps/track common/djangoapps/util common/djangoapps/xblock_django common/djangoapps/xmodule_django common/djangoapps/xmodule_modifiers.py openedx/core/djangoapps/__init__.py openedx/core/djangoapps/content openedx/core/djangoapps/course_groups openedx/core/djangoapps/profile_images openedx/core/djangoapps/user_api lms/lib/__init__.py lms/lib/comment_client lms/lib/courseware_search lms/lib/newrelic_logging lms/lib/xblock lms/tests.py --id-file /edx/app/edxapp/edx-platform/.testids/lms/noseids --xunit-file /edx/app/edxapp/edx-platform/reports/lms/nosetests.xml --verbosity=1
Creating test database for alias 'default'...
Creating test database for alias 'jabber'...
Destroying test database for alias 'default'...
Destroying test database for alias 'jabber'...

Cleaning up after lms
---> pavelib.utils.test.utils.clean_mongo
mongo localhost:27017 /edx/app/edxapp/edx-platform/scripts/delete-mongo-test-dbs.js
MongoDB shell version: 2.6.5
connecting to: localhost:27017/test
Dropping test db test_xlog

Cleaning up after python tests
[31;01m

================================================
Tests failed in the following suites:
* [39;49;00m[31;01mlms

[39;49;00m
